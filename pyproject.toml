[tool.ruff]
exclude = ["alembic/*"]
line-length = 80
target-version = "py38"
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
lint.select = [
  "B006",
  "B015",
  "E",
  "F",
  "C4",
  "D",
  "I",
  "PLR0402",
  "PT001",
  "PT002",
  "PT003",
  "PT006",
  "PT007",
  "PT009",
  "PT010",
  "PT011",
  "PT012",
  "PT013",
  "PT014",
  "PT018",
  "PT022",
  "PT023",
  "PT026",
  "PT027",
  "RUF010",
  "RUF013",
  "S307",
  "S324",
  "UP004",
  "UP008",
  "UP011",
  "UP012",
  "UP015",
  "UP030",
  "UP031",
  "UP032",
  "UP034",
  "SIM101",
  "SIM103",
  "SIM114",
  "SIM115",
  "SIM108",
  "SIM210",
  "SIM910",
  "T20",
  "TID252",
  "TID251",
  "W",
]

force-exclude = true
lint.ignore = [
  "D104", # Missing docstring in __init__
   "D205", # 1 blank line required between summary line and description
  #  "E721",  # type-comparison
  "E402",  # module-import-not-at-top-of-file
  "E501",  # line-too-long
  "E741",  # ambiguous-variable-name
  "F811",  # redefined-while-unused
]
extend-include = ["*.ipynb"]
extend-exclude = [
  "setup.py",
  "migrations"
]

[tool.ruff.lint.flake8-pytest-style]
mark-parentheses = false
fixture-parentheses = false
raises-require-match-for = ["*"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
forced-separate = ["tests"]


[tool.ruff.format]
# Enable reformatting of code snippets in docstrings.
docstring-code-format = true
# Format all docstring code snippets with a line length of 60.
docstring-code-line-length = 60

[tool.ruff.lint.pydocstyle]
convention = "google"
